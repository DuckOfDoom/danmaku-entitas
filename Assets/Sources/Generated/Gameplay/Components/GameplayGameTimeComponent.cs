//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameplayContext {

    public GameplayEntity gameTimeEntity { get { return GetGroup(GameplayMatcher.GameTime).GetSingleEntity(); } }
    public DuckOfDoom.Danmaku.GameTimeComponent gameTime { get { return gameTimeEntity.gameTime; } }
    public bool hasGameTime { get { return gameTimeEntity != null; } }

    public GameplayEntity SetGameTime(ulong newTick) {
        if (hasGameTime) {
            throw new Entitas.EntitasException("Could not set GameTime!\n" + this + " already has an entity with DuckOfDoom.Danmaku.GameTimeComponent!",
                "You should check if the context already has a gameTimeEntity before setting it or use context.ReplaceGameTime().");
        }
        var entity = CreateEntity();
        entity.AddGameTime(newTick);
        return entity;
    }

    public void ReplaceGameTime(ulong newTick) {
        var entity = gameTimeEntity;
        if (entity == null) {
            entity = SetGameTime(newTick);
        } else {
            entity.ReplaceGameTime(newTick);
        }
    }

    public void RemoveGameTime() {
        gameTimeEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameplayEntity {

    public DuckOfDoom.Danmaku.GameTimeComponent gameTime { get { return (DuckOfDoom.Danmaku.GameTimeComponent)GetComponent(GameplayComponentsLookup.GameTime); } }
    public bool hasGameTime { get { return HasComponent(GameplayComponentsLookup.GameTime); } }

    public void AddGameTime(ulong newTick) {
        var index = GameplayComponentsLookup.GameTime;
        var component = CreateComponent<DuckOfDoom.Danmaku.GameTimeComponent>(index);
        component.Tick = newTick;
        AddComponent(index, component);
    }

    public void ReplaceGameTime(ulong newTick) {
        var index = GameplayComponentsLookup.GameTime;
        var component = CreateComponent<DuckOfDoom.Danmaku.GameTimeComponent>(index);
        component.Tick = newTick;
        ReplaceComponent(index, component);
    }

    public void RemoveGameTime() {
        RemoveComponent(GameplayComponentsLookup.GameTime);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameplayMatcher {

    static Entitas.IMatcher<GameplayEntity> _matcherGameTime;

    public static Entitas.IMatcher<GameplayEntity> GameTime {
        get {
            if (_matcherGameTime == null) {
                var matcher = (Entitas.Matcher<GameplayEntity>)Entitas.Matcher<GameplayEntity>.AllOf(GameplayComponentsLookup.GameTime);
                matcher.componentNames = GameplayComponentsLookup.componentNames;
                _matcherGameTime = matcher;
            }

            return _matcherGameTime;
        }
    }
}
