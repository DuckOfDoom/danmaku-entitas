//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameplayEntity {

    public DuckOfDoom.Danmaku.PlayerCollision playerCollision { get { return (DuckOfDoom.Danmaku.PlayerCollision)GetComponent(GameplayComponentsLookup.PlayerCollision); } }
    public bool hasPlayerCollision { get { return HasComponent(GameplayComponentsLookup.PlayerCollision); } }

    public void AddPlayerCollision(GameplayEntity newCollidedWith) {
        var index = GameplayComponentsLookup.PlayerCollision;
        var component = CreateComponent<DuckOfDoom.Danmaku.PlayerCollision>(index);
        component.CollidedWith = newCollidedWith;
        AddComponent(index, component);
    }

    public void ReplacePlayerCollision(GameplayEntity newCollidedWith) {
        var index = GameplayComponentsLookup.PlayerCollision;
        var component = CreateComponent<DuckOfDoom.Danmaku.PlayerCollision>(index);
        component.CollidedWith = newCollidedWith;
        ReplaceComponent(index, component);
    }

    public void RemovePlayerCollision() {
        RemoveComponent(GameplayComponentsLookup.PlayerCollision);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameplayMatcher {

    static Entitas.IMatcher<GameplayEntity> _matcherPlayerCollision;

    public static Entitas.IMatcher<GameplayEntity> PlayerCollision {
        get {
            if (_matcherPlayerCollision == null) {
                var matcher = (Entitas.Matcher<GameplayEntity>)Entitas.Matcher<GameplayEntity>.AllOf(GameplayComponentsLookup.PlayerCollision);
                matcher.componentNames = GameplayComponentsLookup.componentNames;
                _matcherPlayerCollision = matcher;
            }

            return _matcherPlayerCollision;
        }
    }
}
