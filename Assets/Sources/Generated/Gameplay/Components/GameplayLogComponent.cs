//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameplayContext {

    public GameplayEntity logEntity { get { return GetGroup(GameplayMatcher.Log).GetSingleEntity(); } }
    public DuckOfDoom.Danmaku.LogComponent log { get { return logEntity.log; } }
    public bool hasLog { get { return logEntity != null; } }

    public GameplayEntity SetLog(string newMessage) {
        if (hasLog) {
            throw new Entitas.EntitasException("Could not set Log!\n" + this + " already has an entity with DuckOfDoom.Danmaku.LogComponent!",
                "You should check if the context already has a logEntity before setting it or use context.ReplaceLog().");
        }
        var entity = CreateEntity();
        entity.AddLog(newMessage);
        return entity;
    }

    public void ReplaceLog(string newMessage) {
        var entity = logEntity;
        if (entity == null) {
            entity = SetLog(newMessage);
        } else {
            entity.ReplaceLog(newMessage);
        }
    }

    public void RemoveLog() {
        logEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameplayEntity {

    public DuckOfDoom.Danmaku.LogComponent log { get { return (DuckOfDoom.Danmaku.LogComponent)GetComponent(GameplayComponentsLookup.Log); } }
    public bool hasLog { get { return HasComponent(GameplayComponentsLookup.Log); } }

    public void AddLog(string newMessage) {
        var index = GameplayComponentsLookup.Log;
        var component = CreateComponent<DuckOfDoom.Danmaku.LogComponent>(index);
        component.Message = newMessage;
        AddComponent(index, component);
    }

    public void ReplaceLog(string newMessage) {
        var index = GameplayComponentsLookup.Log;
        var component = CreateComponent<DuckOfDoom.Danmaku.LogComponent>(index);
        component.Message = newMessage;
        ReplaceComponent(index, component);
    }

    public void RemoveLog() {
        RemoveComponent(GameplayComponentsLookup.Log);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameplayMatcher {

    static Entitas.IMatcher<GameplayEntity> _matcherLog;

    public static Entitas.IMatcher<GameplayEntity> Log {
        get {
            if (_matcherLog == null) {
                var matcher = (Entitas.Matcher<GameplayEntity>)Entitas.Matcher<GameplayEntity>.AllOf(GameplayComponentsLookup.Log);
                matcher.componentNames = GameplayComponentsLookup.componentNames;
                _matcherLog = matcher;
            }

            return _matcherLog;
        }
    }
}
