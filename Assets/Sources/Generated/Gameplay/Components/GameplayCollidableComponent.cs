//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameplayEntity {

    public DuckOfDoom.Danmaku.CollidableComponent collidable { get { return (DuckOfDoom.Danmaku.CollidableComponent)GetComponent(GameplayComponentsLookup.Collidable); } }
    public bool hasCollidable { get { return HasComponent(GameplayComponentsLookup.Collidable); } }

    public void AddCollidable(float newCollisionRadius) {
        var index = GameplayComponentsLookup.Collidable;
        var component = CreateComponent<DuckOfDoom.Danmaku.CollidableComponent>(index);
        component.CollisionRadius = newCollisionRadius;
        AddComponent(index, component);
    }

    public void ReplaceCollidable(float newCollisionRadius) {
        var index = GameplayComponentsLookup.Collidable;
        var component = CreateComponent<DuckOfDoom.Danmaku.CollidableComponent>(index);
        component.CollisionRadius = newCollisionRadius;
        ReplaceComponent(index, component);
    }

    public void RemoveCollidable() {
        RemoveComponent(GameplayComponentsLookup.Collidable);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameplayMatcher {

    static Entitas.IMatcher<GameplayEntity> _matcherCollidable;

    public static Entitas.IMatcher<GameplayEntity> Collidable {
        get {
            if (_matcherCollidable == null) {
                var matcher = (Entitas.Matcher<GameplayEntity>)Entitas.Matcher<GameplayEntity>.AllOf(GameplayComponentsLookup.Collidable);
                matcher.componentNames = GameplayComponentsLookup.componentNames;
                _matcherCollidable = matcher;
            }

            return _matcherCollidable;
        }
    }
}
